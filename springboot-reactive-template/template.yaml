apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: springboot-template
  title: Spring Boot Reactive Service
  description: Create a simple microservice
  tags:
    - recommended
    - java
spec:
  owner: service@example.com
  type: service

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - company_name
        - java_package_name
        - description
        - owner
        - port
        - artifact_id
      properties:
        component_id:
          title: Artifact Name
          type: string
          description: Unique name of the component. eg (EdgeService) [camel case]
          ui:field: EntityNamePicker
        artifact_id:
          title: Artifact Id
          type: string
          description: Unique name of the componenteg (edge-service) [camel case]
          ui:field: EntityNamePicker
        java_package_name:
          title: Artiface Package Name
          type: string
          description: Name for the java package. eg (edgeservice) [should be in lower case]
        company_name:
          title: Sub Group / Project Name
          type: string
          description: Unique name of the company in lower case for package name. eg (hypercrawler) [should be in lower case]
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        port:
          title: Port
          type: number
          description: Port for the application
        owner:
          title: Owner
          type: string
          description: Owner of the component. eg (avollmaier) [should be in lower case]
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          company_name: ${{ parameters.company_name }}
          java_package_name: ${{ parameters.java_package_name }}
          description: ${{ parameters.description }}
          artifact_id: ${{ parameters.artifact_id }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          port: ${{ parameters.port }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public
        protectDefaultBranch: false
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
